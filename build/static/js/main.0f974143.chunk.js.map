{"version":3,"sources":["components/MenuLink/index.tsx","components/DropDownNav/index.tsx","components/NavMenuList/index.tsx","components/TextSlideBar/index.tsx","components/SearchBar/index.tsx","components/LineDecor/index.tsx","components/Header/index.tsx","components/Footer/index.tsx","components/Banner/index.tsx","pages/HomePage/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["MenuLink","text","link","to","className","DropDownNav","children","title","NavMenuList","menuItems","useState","selectedMenu","setSelectedMenu","useEffect","console","log","map","item","index","key","onMouseOver","onMouseOut","TextSlideBar","MagnifierGlass","SearchBar","search","searchChange","type","value","onChange","name","placeholder","LineDecor","Header","setSearch","style","minWidth","height","background","e","target","mockLink","media","Footer","sm","setSm","i","icon","src","alt","Banner","HomePage","width","App","document","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0f974143.chunk.js","sourcesContent":["import React from 'react'\nimport './MenuLink.scss'\nimport { Link } from 'react-router-dom'\n\ntype props = {\n  text?: string\n  link: string\n}\nconst MenuLink = ({text='Menu Text', link}: props) => {\n  return (\n    <Link to={link} className='menu'>\n      {text}\n    </Link>\n  )\n}\n\nexport default MenuLink","import React from 'react'\nimport './DropDownNav.scss'\n\ntype props = {\n  title: string\n  children: React.ReactNode\n}\n\nconst DropDownNav = ({children, title}: props) => {\n  return (\n    <div className=\"dd-nav\">\n      {children}\n      <div className=\"title-banner\">\n        {title}\n      </div>\n    </div>\n  )\n}\n\nexport default DropDownNav\n","import React, { useState, useEffect } from 'react'\nimport './NavMenuList.scss'\nimport MenuLink from '../MenuLink'\nimport DropDownNav from '../DropDownNav'\n\ntype menuItem = {\n  text: string\n  link: string\n}\n\ntype props = {\n  menuItems: menuItem[]\n}\n\nconst NavMenuList = ({menuItems}: props) => {\n\n  const [selectedMenu, setSelectedMenu] = useState<string>('')\n\n  useEffect(() => {\n    console.log(selectedMenu)\n  }, [selectedMenu])\n\n  return (\n    <ul className='nav-menu-list'>\n      {\n        menuItems.map((item, index) => {\n          function select () {\n            setSelectedMenu(item.text)\n          }\n          function unselected () {\n            setSelectedMenu('')\n          }\n          return (\n            <li key={index} onMouseOver={select} onMouseOut={unselected}>\n              <MenuLink link={item.link} text={item.text} />\n              <div className={selectedMenu === item.text ? '' : 'none'}>\n                <div className=\"drop-line\"></div>\n                <DropDownNav title={item.text}>\n                  test\n                </DropDownNav>\n              </div>\n            </li>\n          )\n        })\n      }\n    </ul>\n  )\n}\n\nexport default NavMenuList\n","import React from 'react'\nimport './TextSlideBar.scss'\n\ntype props = {\n  text?: String\n}\nconst TextSlideBar = ({text = 'put promotion message here.'}: props) => {\n  return (\n    <div className='text-slide-bar'>\n      <span className='scrolling'>\n        {text}\n      </span>\n    </div>\n  )\n}\n\nexport default TextSlideBar","import React from 'react'\nimport './SearchBar.scss'\nimport './Magnifier.scss'\n\n// functional react element\nconst MagnifierGlass = () => <div className='magni'></div>\n\ntype props = {\n  search: string\n  searchChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst SearchBar = ({search, searchChange}: props) => {\n  return (\n    <div className='search-bar'>\n      <input type='text' value={search} onChange={searchChange} name='search' placeholder='Search...' />\n      <MagnifierGlass />\n    </div>\n  )\n}\n\nexport default SearchBar\n","import React from 'react'\nimport './LineDecor.scss'\n\nconst LineDecor = () => {\n  return (\n    <div className='line-decor'>\n      <div className='line-red first-line'></div>\n      <div className='line-red second-line'></div>\n      <div className='line-red third-line'></div>\n    </div>\n  )\n}\n\nexport default LineDecor","import React, { useState, ChangeEvent } from 'react'\nimport NavMenuList from '../NavMenuList'\nimport TextSildeBar from '../TextSlideBar'\nimport SearchBar from '../SearchBar'\nimport LineDecor from '../LineDecor'\nimport './Header.scss'\n\nconst Header = () => {\n\n  const [search, setSearch] = useState<string>('')\n\n  const searchChange = (e: ChangeEvent<HTMLInputElement>) => setSearch(e.target.value)\n\n  const menuItems = [\n    { text: 'หมวดหมู่สินค้า', link: '/product' },\n    { text: 'แบรนด์', link: '/' },\n    { text: 'สินค้าลดราคา', link: '/' },\n    { text: 'วิธีการรสั่งซื้อ', link: '/' },\n    { text: 'ติดต่อเรา', link: '/' },\n  ]\n\n  return (\n    <div className=\"header\">\n      <TextSildeBar />\n      <div className=\"nav\">\n        {/* logo */}\n        <div className=\"icon\" style={{minWidth:150, height:170, background: 'white'}}></div>\n        <NavMenuList menuItems={menuItems} />\n        <SearchBar search={search} searchChange={searchChange} />\n        <LineDecor />\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Footer.scss'\n\ntype socialMediaLink = {\n  link: string\n  media: string\n}\n\n\nconst mockLink = [\n  {\n    link: '#',\n    media: 'facebook'\n  },\n  {\n    link: '#',\n    media: 'shopee'\n  },\n  {\n    link: '#',\n    media: 'instagram'\n  },\n  {\n    link: '#',\n    media: 'twitter'\n  },\n  {\n    link: '#',\n    media: 'youtube'\n  }\n]\n\nconst Footer = () => {\n\n  const [sm, setSm] = useState<socialMediaLink[]>([])\n\n  // fetch list from admin page\n  function testSm () {\n    setSm(mockLink)\n  }\n\n  useEffect(() => {\n    testSm()\n  }, [])\n\n  return (\n    <div className='footer'>\n      <div className='infomation'>\n        <h2>INFOMATION</h2>\n        <ul className='info-list'>\n          <li className='info'>Contact us</li>\n          <li className='info'>About us</li>\n          <li className='info'>Job opportunities</li>\n          <li className='info'>Sell with us</li>\n          <li className='info'>Sitemap</li>\n          <li className='info'>FAQs</li>\n        </ul>\n        <span className='cp'>Copyright © 2020 ABCDEFG. All rights reserved.</span>\n      </div>\n\n      <div className='social-list'>\n        {\n          sm.map((i, index) => {\n            const facebookIcon = 'https://ucarecdn.com/59b6feb1-9b17-4d5e-a3c8-9ea86121d325/facebook.png'\n            const twitterIcon = 'https://ucarecdn.com/59bb25a8-8ff5-44ff-82d7-29febd5e3f45/twitter.png'\n            const instagramIcon = 'https://ucarecdn.com/bd6ef5c3-1135-48f4-99c6-db680a227bce/instagramsketched.png'\n            const shopeeIcon = 'https://ucarecdn.com/07a71030-35a2-421a-a055-245ae1c64a6d/shopee64.png'\n            const youtubeIcon = 'https://ucarecdn.com/e38515d5-ec10-4406-b562-f3b6351c3b61/youtube.png'\n            let icon;\n            switch (i.media) {\n              case 'facebook':\n                icon = facebookIcon\n                break\n              case 'twitter':\n                icon = twitterIcon\n                break\n              case 'instagram':\n                icon = instagramIcon\n                break\n              case 'shopee':\n                icon = shopeeIcon\n                break\n              case 'youtube':\n                icon = youtubeIcon\n                break\n              default:\n                break\n            }\n            return (\n              <div className=\"image-wrapper\" key={index}>\n                <Link to={i.link}>\n                  <img src={icon} alt={i.media}/>\n                </Link>\n              </div>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport './Banner.scss'\n\ntype props = {\n  children: React.ReactNode\n}\n\nconst Banner = ({children}: props) => {\n  return (\n    <div className=\"banner\">\n      {children}\n    </div>\n  )\n}\n\nexport default Banner\n","import React from 'react'\nimport Header from '../../components/Header'\nimport Footer from '../../components/Footer'\nimport Banner from '../../components/Banner'\n\nconst HomePage = () => {\n\n  return (\n    <>\n      <Header/>\n      <Banner>\n        <img src='https://ucarecdn.com/2e5462d7-e919-44e1-b02b-e328cab6a863/1598250920D9Kef.jpg' alt='test banner'\n          style={{width: '100%'}}\n        />\n      </Banner>\n      <Footer/>\n    </>\n  )\n}\n\nexport default HomePage","import React, { useEffect } from 'react';\nimport './App.scss';\nimport { Route } from 'react-router-dom'\n\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  useEffect(() => {\n    document.title = 'Bathadee - main'\n  }, [])\n\n  return (\n    <div className='App'>\n      <Route exact path='/' component={HomePage}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}